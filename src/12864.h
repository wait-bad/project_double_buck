#ifndef   __lcd_12864_h__
#define   __lcd_12864_h__

#include "stm32f10x.h"
#define sda_pin GPIO_Pin_5
#define sda_part GPIOB

#define sck_pin GPIO_Pin_6
#define sck_part GPIOB

#define dc_pin  GPIO_Pin_7
#define dc_part GPIOB

#define rst_pin  GPIO_Pin_8
#define rst_part GPIOB

#define cs_pin  GPIO_Pin_9
#define cs_part GPIOB



#define OLED_W_D1(x)		GPIO_WriteBit(sda_part, sda_pin, (BitAction)(x))//sda
#define OLED_W_D0(x)		GPIO_WriteBit(sck_part, sck_pin, (BitAction)(x))//sck
#define OLED_W_DC(x)		GPIO_WriteBit(dc_part, dc_pin, (BitAction)(x))//dc
#define OLED_W_RES(x)		GPIO_WriteBit(rst_part,rst_pin, (BitAction)(x))//rst
#define OLED_W_CS(x)		GPIO_WriteBit(cs_part, cs_pin,  (BitAction)(x))//cs


/************单词显示数组***********/
const uint8_t start_charge[12]   = {18, 19, 0, 17, 19, 26 , 2, 7, 0, 17, 6, 4};
const uint8_t start_discharge[15]   = {18, 19, 0, 17, 19, 26 , 3, 8, 18, 2, 7, 0, 17, 6, 4};
const uint8_t start[5]  =       {18, 19, 0, 17, 19};
const uint8_t discharge[9] = {3, 8, 18, 2, 7, 0, 17, 6, 4};

const uint8_t prass_any_key[13]  = {15, 17, 4, 18, 18, 26, 0, 13, 24, 26, 10, 4, 24};
const uint8_t battery[7]         = {1, 0, 19, 19, 4, 17, 24};
const uint8_t bat_capacity[12]   = {1, 0, 19, 26, 2, 0, 15, 0, 2, 8, 19, 24};
const uint8_t min[3]             = {12, 8, 13} ;
const  uint8_t bat[3]            = {1, 0, 19} ;
const  uint8_t As[2]             = {29 , 18};
const  uint8_t Ah[2]             = {29 , 7};
const  uint8_t voltage[7]        = {21, 14, 11, 19, 0, 6, 4};
const uint8_t start_voltage[13]  = {18, 19, 0, 17, 19, 26, 21, 14, 11, 19, 0, 6, 4};
const uint8_t capacity_[8]        ={2, 0, 15, 0, 2, 8, 19, 24};
const uint8_t current[7]         ={2, 20, 17, 17, 4, 13, 19};
const uint8_t cailbration[11]    = {2, 0, 11, 8, 1, 17, 0, 19, 8, 14, 13};
const uint8_t __[2]              ={31,31};
const uint8_t noll_2[2]          ={32,32};

/***********************************/






unsigned char alphabet[35][16]={

/* [字库]：[ASC8x16E字库] [数据排列]:从左到右从上到下 [取模方式]:纵向8点下高位 [正负反色]:否 [去掉重复后]共26个字符
[总字符库]："abcdefghigklmnopqrstuvwxyz"*/

/*-- ID:0,字符:"a",ASCII编码:61,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0x40,0x40,0x40,0xc0,0x80,0x00,0x00,0x0e,0x12,0x12,0x19,0x0f,0x1f,0x00,

/*-- ID:1,字符:"b",ASCII编码:62,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xfc,0x40,0x40,0x40,0xc0,0x80,0x00,0x00,0x1f,0x08,0x10,0x10,0x0c,0x0f,0x00,

/*-- ID:2,字符:"c",ASCII编码:63,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0x40,0x40,0x40,0xc0,0x80,0x00,0x00,0x0f,0x18,0x10,0x10,0x08,0x0c,0x00,

/*-- ID:3,字符:"d",ASCII编码:64,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x40,0x40,0x40,0xc0,0xfc,0x00,0x00,0x0f,0x18,0x10,0x10,0x0c,0x1f,0x00,

/*-- ID:4,字符:"e",ASCII编码:65,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0x40,0x40,0x40,0xc0,0x80,0x00,0x00,0x0f,0x09,0x11,0x11,0x19,0x0d,0x00,

/*-- ID:5,字符:"f",ASCII编码:66,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x40,0x40,0xfc,0x44,0x44,0x44,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,

/*-- ID:6,字符:"g",ASCII编码:67,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0x40,0x40,0x40,0xc0,0x40,0x00,0x00,0x7d,0x4a,0x4a,0x4a,0x5b,0x30,0x00,

/*-- ID:7,字符:"h",ASCII编码:68,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xfc,0x80,0x40,0x40,0x40,0xc0,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x1f,0x00,

/*-- ID:8,字符:"i",ASCII编码:69,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x00,0xcc,0xcc,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,

/*-- ID:9,字符:"g",ASCII编码:67,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0x40,0x40,0x40,0xc0,0x40,0x00,0x00,0x7d,0x4a,0x4a,0x4a,0x5b,0x30,0x00,

/*-- ID:10,字符:"k",ASCII编码:6B,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xfc,0x00,0x80,0xc0,0x40,0x00,0x00,0x00,0x1f,0x03,0x01,0x03,0x0c,0x18,0x00,

/*-- ID:11,字符:"l",ASCII编码:6C,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x00,0xfc,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,

/*-- ID:12,字符:"m",ASCII编码:6D,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xc0,0xc0,0x40,0xc0,0x80,0x40,0xc0,0xc0,0x1f,0x1f,0x00,0x1f,0x1f,0x00,0x1f,0x1f,

/*-- ID:13,字符:"n",ASCII编码:6E,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x80,0x40,0x40,0x40,0xc0,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x1f,0x00,

/*-- ID:14,字符:"o",ASCII编码:6F,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0x40,0x40,0x40,0xc0,0x80,0x00,0x00,0x0f,0x08,0x10,0x10,0x08,0x0f,0x00,

/*-- ID:15,字符:"p",ASCII编码:70,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x40,0x40,0x40,0xc0,0x80,0x00,0x00,0x7f,0x08,0x10,0x10,0x0c,0x0f,0x00,

/*-- ID:16,字符:"q",ASCII编码:71,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x40,0x40,0x40,0xc0,0xc0,0x00,0x00,0x0f,0x18,0x10,0x10,0x0c,0x7f,0x00,

/*-- ID:17,字符:"r",ASCII编码:72,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0xc0,0x80,0x40,0x40,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,

/*-- ID:18,字符:"s",ASCII编码:73,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x80,0xc0,0x40,0x40,0xc0,0x80,0x00,0x00,0x0d,0x19,0x12,0x12,0x1a,0x0c,0x00,

/*-- ID:19,字符:"t",ASCII编码:74,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x40,0x40,0x40,0xf8,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x0f,0x10,0x10,0x18,0x00,

/*-- ID:20,字符:"u",ASCII编码:75,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x00,0x00,0x00,0x00,0xc0,0x00,0x00,0x0f,0x18,0x10,0x18,0x0c,0x1f,0x00,

/*-- ID:21,字符:"v",ASCII编码:76,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x80,0x00,0x00,0x80,0xc0,0x00,0x00,0x00,0x07,0x1c,0x1c,0x03,0x00,0x00,

/*-- ID:22,字符:"w",ASCII编码:77,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xc0,0xc0,0x00,0xc0,0xc0,0x00,0xc0,0x40,0x00,0x0f,0x1e,0x01,0x03,0x1c,0x07,0x00,

/*-- ID:23,字符:"x",ASCII编码:78,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x40,0xc0,0x00,0x80,0xc0,0x00,0x00,0x00,0x18,0x0c,0x07,0x07,0x0c,0x10,0x00,

/*-- ID:24,字符:"y",ASCII编码:79,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xc0,0x80,0x00,0x00,0x80,0xc0,0x00,0x00,0x40,0x47,0x7c,0x1c,0x03,0x00,0x00,

/*-- ID:25,字符:"z",ASCII编码:7A,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x40,0x40,0x40,0xc0,0xc0,0x40,0x00,0x00,0x18,0x1c,0x12,0x11,0x10,0x10,0x00,

/*-- ID:26,字符:"空",ASCII编码: ,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/*-- ID:27,字符:"V",ASCII编码:56,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x04,0x7c,0xe0,0x00,0x00,0xf0,0x3c,0x00,0x00,0x00,0x03,0x1e,0x1f,0x01,0x00,0x00,

/*-- ID:28,字符:"I",ASCII编码:49,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x00,0xfc,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0x1f,0x00,0x00,0x00,

/*-- ID:29,字符:"A",ASCII编码:41,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0xe0,0x1c,0x70,0x80,0x00,0x00,0x10,0x1e,0x11,0x01,0x01,0x13,0x1c,0x10,

/*-- ID:30,字符:"C",ASCII编码:43,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xe0,0x18,0x04,0x04,0x04,0x04,0x1c,0x00,0x03,0x0c,0x10,0x10,0x10,0x08,0x04,0x00,

/*-- ID:31,字符:">",ASCII编码:3E,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0xfb,0xf7,0xef,0xdf,0xbf,0x7f,0xff,0xff,0xe7,0xf7,0xfb,0xfd,0xfe,0xff,0xff,

/*-- ID:32,字符:"  ",ASCII编码:39,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};

uint8_t numbera[21][16]={
/* [字库]：[ASC8x16E字库] [数据排列]:从左到右从上到下 [取模方式]:纵向8点下高位 [正负反色]:否 [去掉重复后]共10个字符
[总字符库]："0123456789"*/

/*-- ID:0,字符:"0",ASCII编码:30,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xf0,0x08,0x04,0x04,0x08,0xf0,0x00,0x00,0x07,0x08,0x10,0x10,0x08,0x07,0x00,

/*-- ID:1,字符:"1",ASCII编码:31,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x08,0x08,0xfc,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x1f,0x10,0x10,0x00,

/*-- ID:2,字符:"2",ASCII编码:32,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x38,0x04,0x04,0x04,0x84,0x78,0x00,0x00,0x18,0x14,0x12,0x11,0x10,0x18,0x00,

/*-- ID:3,字符:"3",ASCII编码:33,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x18,0x04,0x84,0x84,0x44,0x38,0x00,0x00,0x0c,0x10,0x10,0x10,0x11,0x0e,0x00,

/*-- ID:4,字符:"4",ASCII编码:34,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0xc0,0x20,0x18,0xfc,0x00,0x00,0x00,0x03,0x02,0x12,0x12,0x1f,0x12,0x12,

/*-- ID:5,字符:"5",ASCII编码:35,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xfc,0x44,0x44,0x44,0x84,0x04,0x00,0x00,0x0c,0x10,0x10,0x10,0x08,0x07,0x00,

/*-- ID:6,字符:"6",ASCII编码:36,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xf0,0x88,0x44,0x44,0x48,0x80,0x00,0x00,0x07,0x08,0x10,0x10,0x10,0x0f,0x00,

/*-- ID:7,字符:"7",ASCII编码:37,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x0c,0x04,0x04,0xc4,0x34,0x0c,0x00,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,

/*-- ID:8,字符:"8",ASCII编码:38,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x38,0x44,0x84,0x84,0x44,0x38,0x00,0x00,0x0e,0x11,0x10,0x10,0x11,0x0e,0x00,

/*-- ID:9,字符:"9",ASCII编码:39,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xf8,0x04,0x04,0x04,0x88,0xf0,0x00,0x00,0x00,0x09,0x11,0x11,0x08,0x07,0x00,

/*-- ID:10,字符:"  ",ASCII编码:39,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/*-- ID:11,字符:":",ASCII编码:3A,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x00,0x60,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,

/*-- ID:12,字符:".",ASCII编码:2E,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,

/***********反模***************/
/*-- ID:0,字符:"1",ASCII编码:31,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0xcf,0xef,0x07,0x03,0xff,0xff,0xff,0xff,0xff,0xff,0xe0,0xe0,0xff,0xff,0xff,

/*-- ID:1,字符:"2",ASCII编码:32,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0xe7,0xf3,0xfb,0x7b,0x13,0xc7,0xff,0xff,0xe7,0xe3,0xe5,0xe6,0xe7,0xe7,0xff,

/*-- ID:2,字符:"3",ASCII编码:33,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0xe7,0xf3,0xfb,0x3b,0x13,0xc7,0xff,0xff,0xf3,0xf7,0xef,0xef,0xf6,0xf8,0xff,

/*-- ID:3,字符:"4",ASCII编码:34,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0x7f,0x3f,0xcf,0xe7,0x03,0xff,0xff,0xfd,0xfc,0xfd,0xfd,0xfd,0xe0,0xfd,0xfd,

/*-- ID:4,字符:"5",ASCII编码:35,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0x07,0xb3,0x9b,0xbb,0x3b,0x7b,0xff,0xfb,0xf3,0xe7,0xef,0xe7,0xf3,0xf8,0xff,

/*-- ID:5,字符:"6",ASCII编码:36,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0x3f,0x1f,0x87,0xb3,0xbf,0x7f,0xff,0xff,0xf0,0xe7,0xef,0xef,0xe7,0xf0,0xfc,

/*-- ID:6,字符:"7",ASCII编码:37,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0xfb,0xfb,0xfb,0x3b,0x8b,0xe3,0xff,0xff,0xff,0xe7,0xe0,0xfe,0xff,0xff,0xff,

/*-- ID:7,字符:"8",ASCII编码:38,对应字:宽x高=8x16,画布:宽W=8 高H=16,共16字节*/
0xff,0x07,0x3b,0x3b,0x3b,0x13,0xc7,0xff,0xfd,0xf0,0xe7,0xef,0xef,0xe7,0xf0,0xff

};


void lcd_gpio_Init(void)
{
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
	
	GPIO_InitTypeDef GPIO_InitStructure;
 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_Pin = sda_pin;


 	GPIO_Init(sda_part, &GPIO_InitStructure);
	GPIO_InitStructure.GPIO_Pin = sck_pin;
 	GPIO_Init(sck_part, &GPIO_InitStructure);
	GPIO_InitStructure.GPIO_Pin = cs_pin;
 	GPIO_Init(cs_part, &GPIO_InitStructure);
	GPIO_InitStructure.GPIO_Pin = dc_pin;
 	GPIO_Init(dc_part, &GPIO_InitStructure);
	GPIO_InitStructure.GPIO_Pin = rst_pin;
 	GPIO_Init(rst_part, &GPIO_InitStructure);

    /*GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
 	GPIO_Init(GPIOB, &GPIO_InitStructure);*/
	

	OLED_W_D0(0);
	OLED_W_D1(0);
	OLED_W_RES(1);
	OLED_W_DC(1);
	OLED_W_CS(1);
}

/**
  * @brief  SPI发送一个字节
  * @param  Byte 要发送的一个字节
  * @retval 无
  */
void spi_write(uint8_t Byte)
{
	uint8_t i;
	for (i = 0; i < 8; i++)
	{
		OLED_W_D0(0);
		OLED_W_D1(Byte & (0x80 >> i));
		OLED_W_D0(1);
	}
    OLED_W_D0(0);
}


/**
  * @brief  OLED写命令
  * @param  Command 要写入的命令
  * @retval 无
  */
void spi_wirte_command(uint8_t Command)
{
	OLED_W_CS(0);
	OLED_W_DC(0);
	spi_write(Command);
	OLED_W_CS(1);
}


/**
  * @brief  OLED写数据
  * @param  Data 要写入的数据
  * @retval 无
  */
void spi_wirte_data(uint8_t Data)
{
	OLED_W_CS(0);
	OLED_W_DC(1);
	spi_write(Data);
	OLED_W_CS(1);
}


/**
 * //@brief 清屏
 * 
 */
void Lcd12864_ClearScreen(unsigned char numebr)
{
	unsigned char  number ,i, j,b;

    for(i=0; i<8; i++)
	{
        spi_wirte_command(0x10);
        spi_wirte_command(0x00);
		spi_wirte_command(0xb0+i);
        for(j=0; j<128; j++)
		{
                spi_wirte_data(numebr); 
               
		}
    }
}

void lcd12864_init()
{
    
    spi_wirte_command(0xe2);//软复位

    spi_wirte_command(0xa6);//列扫描方向常规

    spi_wirte_command(0xa4);//点阵常规显示
    spi_wirte_command(0xa3);//偏压比设定 1/9
    spi_wirte_command(0xc0);//行方向为普通扫描

    spi_wirte_command(0x2d);
    spi_wirte_command(0x2e);
    spi_wirte_command(0x2f);//分步打开内部升压 调整 跟随

    spi_wirte_command(0x22);//设置电阻 粗调对比度

    spi_wirte_command(0x81);
    spi_wirte_command(0x36);//细调对比度

    spi_wirte_command(0xf8);
    spi_wirte_command(0x00);//升压控制 五倍

    spi_wirte_command(0xaf);//打开显示器

}

void lcd12864_show_image(unsigned char data2[],unsigned char number)
{
    unsigned char  i, j,b;
    spi_wirte_command(0xc8);
    for(i=0; i<8; i++)
	{
        
		spi_wirte_command(0xb0+i); 							   

        spi_wirte_command(0x12);
        spi_wirte_command(0x06);
        for(j=0; j<number; j++)
		{
                spi_wirte_data(*data2++);
                
		}
    }
}

/**
 * @brief 字母显示函数
 * 
 * @param dir 方向
 * @param x   页地址
 * @param y   列地址
 * @param datab 指针
 */
void lcd12864_show_abc(char dir,char x,unsigned char y,unsigned char datab)
{
    unsigned char i,o ,p;
    unsigned char *a=alphabet[datab];
    if (dir){ spi_wirte_command(0xc0);spi_wirte_command(0xa1);}
    else    { spi_wirte_command(0xc8);}
   
    for ( i = 0; i < 2; i++)
    {
        spi_wirte_command((0xb0+i)+x);   //设置页地址 x为起始页 

        spi_wirte_command(0x10+(y>>4));  //设置高位（MSB）
        spi_wirte_command(0x00+(y&0x0f));//设置低位（LSB）
        for ( o = 0; o < 8 ; o++)
        {
            spi_wirte_data(*a++);
        }
    }
}

void lcd12864_show_string(char dir,char x,unsigned char y,char nlong ,char show_word[])
{
    char i,number;
    if (dir){ spi_wirte_command(0xc0);}
    else    { spi_wirte_command(0xc8);}
    for ( i = nlong; i > 0; i--)
    {
        number=show_word[nlong-i];
        lcd12864_show_abc(dir,x,y+(nlong-i)*9,number); 
    }
}
/**
 * @brief 10平方根函数
 * 
 * @param n 10的平方数
 */
unsigned long square(char n)
{
    unsigned char i;
    unsigned long result=1;
    for ( i = 0; i<n; i++)
    {
        result*=10;
    }
    return result;

}

/**
 * @brief 12864数字显示函数
 * 
 * @param dir 显示方向 1为反向 0为正向
 * @param x 页地址
 * @param y 列地址
 * @param high 字符高度
 * @param wide 字符宽度
 * @param datah 指针
 */
void lcd12864_show_n(char dir,char x,unsigned char y,unsigned char datab)
{
    unsigned char i,o ,p;
    unsigned char *a=numbera[datab];
    if (dir){ spi_wirte_command(0xc0);}
    else    { spi_wirte_command(0xc8);}
   
    for ( i = 0; i < 2; i++)
    {
        spi_wirte_command((0xb0+i)+x);   //设置页地址 x为起始页 

        spi_wirte_command(0x10+(y>>4));  //设置高位（MSB）
        spi_wirte_command(0x00+(y&0x0f));//设置低位（LSB）
        for ( o = 0; o < 8; o++)
        {
           spi_wirte_data(*a++);
        }
    }
}
/**
 * @brief 显示数字 高度为16 宽度为9;
 * 
 * @param dir    显示方向 1为反向 0为正向
 * @param x      页地址
 * @param y      列地址
 * @param nlong  数字总长度
 * @param datab  数字
 */
void lcd12864_show_nmuber(char dir,char x,unsigned char y,char nlong ,unsigned long datab)
{
    char i,number;
    if (dir){ spi_wirte_command(0xc0);}
    else    { spi_wirte_command(0xc8);}
    for ( i = nlong; i > 0; i--)
    {
        number=(datab/square(i-1))%10;
        lcd12864_show_n(dir,x,y+(nlong-i)*9,number); 
    }
    
}  

void lcd12864_show_square(char dir,char x,unsigned char y,uint8_t null)
{
    unsigned char i,o ,p;

    if (dir){ spi_wirte_command(0xc0);spi_wirte_command(0xa1);}
    else    { spi_wirte_command(0xc8);}
   
    for ( i = 0; i < 1; i++)
    {
        spi_wirte_command((0xb0+i)+x);   //设置页地址 x为起始页 

        spi_wirte_command(0x10+(y>>4));  //设置高位（MSB）
        spi_wirte_command(0x00+(y&0x0f));//设置低位（LSB）
        for ( o = 0; o < 8 ; o++)
        {
            if (null == 0)
            {
                spi_wirte_data(0x00);
            }
            else
            {
                spi_wirte_data(0xff);
            }
            

        }
    }
}

#endif // !__lcd_12864_h__